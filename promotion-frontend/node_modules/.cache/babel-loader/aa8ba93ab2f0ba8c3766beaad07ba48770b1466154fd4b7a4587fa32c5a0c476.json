{"ast":null,"code":"import axios from 'axios';\n\n// Configuration de base pour axios\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Intercepteur pour ajouter le token d'authentification\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Intercepteur pour gérer les erreurs de réponse\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expiré ou invalide\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// API d'authentification\nexport const authAPI = {\n  login: async credentials => {\n    const response = await api.post('/api/auth/login', credentials);\n    return response.data;\n  },\n  register: async userData => {\n    const response = await api.post('/api/auth/register', userData);\n    return response.data;\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/api/auth/me');\n    return response.data;\n  },\n  logout: async () => {\n    const response = await api.post('/api/auth/logout');\n    return response.data;\n  }\n};\n\n// API des campagnes\nexport const campaignAPI = {\n  getCampaigns: async () => {\n    const response = await api.get('/api/campaigns/');\n    return response.data;\n  },\n  getCampaign: async id => {\n    const response = await api.get(`/api/campaigns/${id}`);\n    return response.data;\n  },\n  createCampaign: async campaignData => {\n    const response = await api.post('/api/campaigns/', campaignData);\n    return response.data;\n  },\n  updateCampaign: async (id, campaignData) => {\n    const response = await api.put(`/api/campaigns/${id}`, campaignData);\n    return response.data;\n  },\n  deleteCampaign: async id => {\n    const response = await api.delete(`/api/campaigns/${id}`);\n    return response.data;\n  },\n  getCampaignStats: async id => {\n    const response = await api.get(`/api/campaigns/${id}/stats`);\n    return response.data;\n  }\n};\n\n// API des données promotionnelles\nexport const promotionDataAPI = {\n  getPromotionData: async () => {\n    const response = await api.get('/api/promotion-data/');\n    return response.data;\n  },\n  getPromotionDataItem: async id => {\n    const response = await api.get(`/api/promotion-data/${id}`);\n    return response.data;\n  },\n  createPromotionData: async data => {\n    const response = await api.post('/api/promotion-data/', data);\n    return response.data;\n  },\n  updatePromotionData: async (id, data) => {\n    const response = await api.put(`/api/promotion-data/${id}`, data);\n    return response.data;\n  },\n  deletePromotionData: async id => {\n    const response = await api.delete(`/api/promotion-data/${id}`);\n    return response.data;\n  },\n  getPromotionDataByCampaign: async campaignId => {\n    const response = await api.get(`/api/promotion-data/campaign/${campaignId}`);\n    return response.data;\n  }\n};\n\n// API des utilisateurs\nexport const userAPI = {\n  getUsers: async () => {\n    const response = await api.get('/api/users/');\n    return response.data;\n  },\n  getUser: async id => {\n    const response = await api.get(`/api/users/${id}`);\n    return response.data;\n  },\n  updateUser: async (id, userData) => {\n    const response = await api.put(`/api/users/${id}`, userData);\n    return response.data;\n  },\n  deleteUser: async id => {\n    const response = await api.delete(`/api/users/${id}`);\n    return response.data;\n  },\n  getPromotrices: async () => {\n    const response = await api.get('/api/users/promotrices');\n    return response.data;\n  },\n  getUserStats: async () => {\n    const response = await api.get('/api/users/stats');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","data","register","userData","getCurrentUser","get","logout","campaignAPI","getCampaigns","getCampaign","id","createCampaign","campaignData","updateCampaign","put","deleteCampaign","delete","getCampaignStats","promotionDataAPI","getPromotionData","getPromotionDataItem","createPromotionData","updatePromotionData","deletePromotionData","getPromotionDataByCampaign","campaignId","userAPI","getUsers","getUser","updateUser","deleteUser","getPromotrices","getUserStats"],"sources":["C:/Users/PHILIPPE/promotion-app/promotion-frontend/src/lib/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Configuration de base pour axios\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n} );\r\n\r\n// Intercepteur pour ajouter le token d'authentification\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Intercepteur pour gérer les erreurs de réponse\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expiré ou invalide\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API d'authentification\r\nexport const authAPI = {\r\n  login: async (credentials) => {\r\n    const response = await api.post('/api/auth/login', credentials);\r\n    return response.data;\r\n  },\r\n\r\n  register: async (userData) => {\r\n    const response = await api.post('/api/auth/register', userData);\r\n    return response.data;\r\n  },\r\n\r\n  getCurrentUser: async () => {\r\n    const response = await api.get('/api/auth/me');\r\n    return response.data;\r\n  },\r\n\r\n  logout: async () => {\r\n    const response = await api.post('/api/auth/logout');\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// API des campagnes\r\nexport const campaignAPI = {\r\n  getCampaigns: async () => {\r\n    const response = await api.get('/api/campaigns/');\r\n    return response.data;\r\n  },\r\n\r\n  getCampaign: async (id) => {\r\n    const response = await api.get(`/api/campaigns/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createCampaign: async (campaignData) => {\r\n    const response = await api.post('/api/campaigns/', campaignData);\r\n    return response.data;\r\n  },\r\n\r\n  updateCampaign: async (id, campaignData) => {\r\n    const response = await api.put(`/api/campaigns/${id}`, campaignData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteCampaign: async (id) => {\r\n    const response = await api.delete(`/api/campaigns/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  getCampaignStats: async (id) => {\r\n    const response = await api.get(`/api/campaigns/${id}/stats`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// API des données promotionnelles\r\nexport const promotionDataAPI = {\r\n  getPromotionData: async () => {\r\n    const response = await api.get('/api/promotion-data/');\r\n    return response.data;\r\n  },\r\n\r\n  getPromotionDataItem: async (id) => {\r\n    const response = await api.get(`/api/promotion-data/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createPromotionData: async (data) => {\r\n    const response = await api.post('/api/promotion-data/', data);\r\n    return response.data;\r\n  },\r\n\r\n  updatePromotionData: async (id, data) => {\r\n    const response = await api.put(`/api/promotion-data/${id}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  deletePromotionData: async (id) => {\r\n    const response = await api.delete(`/api/promotion-data/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  getPromotionDataByCampaign: async (campaignId) => {\r\n    const response = await api.get(`/api/promotion-data/campaign/${campaignId}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// API des utilisateurs\r\nexport const userAPI = {\r\n  getUsers: async () => {\r\n    const response = await api.get('/api/users/');\r\n    return response.data;\r\n  },\r\n\r\n  getUser: async (id) => {\r\n    const response = await api.get(`/api/users/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  updateUser: async (id, userData) => {\r\n    const response = await api.put(`/api/users/${id}`, userData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteUser: async (id) => {\r\n    const response = await api.delete(`/api/users/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  getPromotrices: async () => {\r\n    const response = await api.get('/api/users/promotrices');\r\n    return response.data;\r\n  },\r\n\r\n  getUserStats: async () => {\r\n    const response = await api.get('/api/users/stats');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}