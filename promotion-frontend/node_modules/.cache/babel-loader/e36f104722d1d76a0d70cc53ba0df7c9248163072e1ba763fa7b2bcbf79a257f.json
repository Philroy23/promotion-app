{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PHILIPPE\\\\promotion-app\\\\promotion-frontend\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { authAPI } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n      if (token && savedUser) {\n        try {\n          // Vérifier si le token est toujours valide\n          const response = await authAPI.getCurrentUser();\n          setUser(response.user);\n        } catch (error) {\n          // Token invalide, nettoyer le localStorage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          setUser(null);\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await authAPI.login(credentials);\n      const {\n        access_token,\n        user: userData\n      } = response;\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Erreur de connexion';\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authAPI.register(userData);\n      return {\n        success: true,\n        message: response.message\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Erreur lors de l\\'inscription';\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      // Même en cas d'erreur, on déconnecte localement\n      console.error('Erreur lors de la déconnexion:', error);\n    } finally {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n    }\n  };\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    isAuthenticated: !!user,\n    isPromoter: (user === null || user === void 0 ? void 0 : user.role) === 'promotrice',\n    isSupervisor: (user === null || user === void 0 ? void 0 : user.role) === 'superviseur',\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'administrateur',\n    isSuperAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'super_administrateur'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default useAuth;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useEffect","createContext","useContext","authAPI","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","initAuth","token","localStorage","getItem","savedUser","response","getCurrentUser","error","removeItem","login","credentials","access_token","userData","setItem","JSON","stringify","success","_error$response","_error$response$data","message","data","register","_error$response2","_error$response2$data","logout","console","updateUser","updatedUser","value","isAuthenticated","isPromoter","role","isSupervisor","isAdmin","isSuperAdmin","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/PHILIPPE/promotion-app/promotion-frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useEffect, createContext, useContext } from 'react';\r\nimport { authAPI } from '../lib/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const savedUser = localStorage.getItem('user');\r\n\r\n      if (token && savedUser) {\r\n        try {\r\n          // Vérifier si le token est toujours valide\r\n          const response = await authAPI.getCurrentUser();\r\n          setUser(response.user);\r\n        } catch (error) {\r\n          // Token invalide, nettoyer le localStorage\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('user');\r\n          setUser(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await authAPI.login(credentials);\r\n      const { access_token, user: userData } = response;\r\n\r\n      localStorage.setItem('token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n\r\n      return { success: true, user: userData };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Erreur de connexion';\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await authAPI.register(userData);\r\n      return { success: true, message: response.message };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Erreur lors de l\\'inscription';\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await authAPI.logout();\r\n    } catch (error) {\r\n      // Même en cas d'erreur, on déconnecte localement\r\n      console.error('Erreur lors de la déconnexion:', error);\r\n    } finally {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const updateUser = (updatedUser) => {\r\n    setUser(updatedUser);\r\n    localStorage.setItem('user', JSON.stringify(updatedUser));\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUser,\r\n    isAuthenticated: !!user,\r\n    isPromoter: user?.role === 'promotrice',\r\n    isSupervisor: user?.role === 'superviseur',\r\n    isAdmin: user?.role === 'administrateur',\r\n    isSuperAdmin: user?.role === 'super_administrateur',\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default useAuth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}